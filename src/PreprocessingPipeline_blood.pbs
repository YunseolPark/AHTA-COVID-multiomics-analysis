#!/usr/bin/env bash

#PBS -l nodes=1:ppn=8
#PBS -l walltime=05:00:00
#PBS -l mem=18gb

# Load the necessary modules
module load Trimmomatic/0.39-Java-11
module load MultiQC/1.9-intel-2020a-Python-3.8.2
module load FastQC/0.11.9-Java-11
module load kallisto/0.46.1-iimpi-2020a
module load parallel-fastq-dump/0.6.6-GCCcore-9.3.0-SRA-Toolkit-3.0.0-Python-3.8.2
module load TopHat/2.1.2-gompi-2020a

# Change to the directory you are working in 
cd /kyukon/data/gent/vo/000/gvo00095/Courses/AHTA/Group3/RNAseq_blood2

# Create Pseudo Transcriptome
gtf_to_fasta resources/Homo_sapiens.GRCh38.108.gtf resources/Homo_sapiens.GRCh38.dna.toplevel.fa resources/Homosapiens_PseudoTranscriptome.fa

# Create index
kallisto index -i index ../resources/Homosapiens_PseudoTranscriptome.fa

# Make a directory to store kallisto logs
mkdir kallisto_logs

#mkdir fastqc_trimmed

Scratch=/kyukon/scratch/gent/vo/000/gvo00095/vsc45300/RNAseq_blood2

# For loop over all samples
# For T-cell use: SRR15042724 SRR15042725 SRR15042726 SRR15042727 SRR15042728 SRR15042729 SRR15042704 SRR15042705 SRR15042706 SRR15042707 SRR15042708 SRR15042709 SRR15042712 SRR15042713 SRR15042714 SRR15042715 SRR15042716 SRR15042717
for ID in SRR12926701 SRR12926702 SRR12926703 SRR12926705 SRR12926707 SRR12926708
do 
	# Echo the ID you are processing
	echo $ID
	
	# Load the reads for the ID (--sra-id $ID) using 8 cores (--threads 8)
	parallel-fastq-dump --split-files --outdir $Scratch --sra-id $ID --threads 8 | head
	
	# Perform QC with fastqc on the raw reads outputting everything in the fastqc folder (--outdir fastqc)
	fastqc --outdir fastqc_out $Scratch/$ID\_1.fastq
	fastqc --outdir fastqc_out $Scratch/$ID\_2.fastq

	# Perform trimming based on the quality score (-phred33) with a sliding window (SLIDINGWINDOW:4:15) using 8 cores (-threads 8)
	# storing the results in $ID\_trimQuality.fastq
	java -jar $EBROOTTRIMMOMATIC/trimmomatic-0.39.jar PE -threads 8 -phred33 $Scratch/$ID\_1.fastq $Scratch/$ID\_2.fastq $Scratch/$ID\_1_trimQuality.fastq $Scratch/$ID\_1un_trimQuality.fastq $Scratch/$ID\_2_trimQuality.fastq $Scratch/$ID\_2un_trimQuality.fastq SLIDINGWINDOW:4:15
	
	#fastqc on the trimmed reads outputting everything in the fastqc folder (--outdir fastqc
	fastqc --outdir fastqc_trimmed $Scratch/$ID\_1_trimQuality.fastq
	fastqc --outdir fastqc_trimmed $Scratch/$ID\_2_trimQuality.fastq
	
	# Make directory to output alignment results
	mkdir $Scratch/$ID\_quant
	
	# Pseudo-alignment using kallisto
	kallisto quant -i index -o $Scratch/$ID\_quant -t 8 -g ../resources/Homo_sapiens.GRCh38.108.gtf $Scratch/$ID\_1_trimQuality.fastq $Scratch/$ID\_2_trimQuality.fastq &> kallisto_logs/$ID\_kallisto.log
	
	# Change numeric ids in kallisto output with gene IDs (this is more advanced unix coding)
	grep ">" ../resources/Homosapiens_PseudoTranscriptome.fa | cut -d" " -f 2 > $Scratch/$ID\_quant/transcriptIDs.txt
	awk '{OFS = "\t"} FNR==NR{a[NR+1]=$1;next}{if(FNR!=1){$1=a[FNR]}}1' $Scratch/$ID\_quant/transcriptIDs.txt $Scratch/$ID\_quant/abundance.tsv > $Scratch/$ID\_quant/abundance_bis.tsv
	mv $Scratch/$ID\_quant/abundance_bis.tsv $Scratch/$ID\_quant/abundance.tsv
	
	# Remove fastq files to reduce disk usage
	# raw file
	#rm $Scratch/$ID\.fastq
	#rm $Scratch/$ID\_2.fastq
	# trimQuality file
	#rm $Scratch/$ID\_trimQuality.fastq
	#rm $Scratch/$ID\_2_trimQuality.fastq
	# trimBoth file
	#rm $Scratch/$ID\_trimBoth.fastq
	#rm $Scratch/$ID\_2_trimBoth.fastq

done

# Make directory to output all alignment
mkdir kallisto_quant
# Put all kallisto output files in one directory (easier for downloading and downstream processing with Rstudio!)
# For T-cell use: SRR15042724 SRR15042725 SRR15042726 SRR15042727 SRR15042728 SRR15042729 SRR15042704 SRR15042705 SRR15042706 SRR15042707 SRR15042708 SRR15042709 SRR15042712 SRR15042713 SRR15042714 SRR15042715 SRR15042716 SRR15042717
for ID in SRR12926701 SRR12926702 SRR12926703 SRR12926705 SRR12926707 SRR12926708
do
	mv $Scratch/$ID\_quant/abundance.h5 kallisto_quant/$ID\_abundance.h5
	mv $Scratch/$ID\_quant/abundance.tsv kallisto_quant/$ID\_abundance.tsv
	mv $Scratch/$ID\_quant/run_info.json kallisto_quant/$ID\_run_info.json
	rm -r $Scratch/$ID\_quant
done

multiqc .
